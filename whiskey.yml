
Build:
- Version:
    Path: Carbon.Cryptography\Carbon.Cryptography.psd1
    Prerelease:
    - "*/*": alpha$(WHISKEY_BUILD_NUMBER)
    - develop: rc$(WHISKEY_BUILD_NUMBER)

# Update the AppVeyor build/version number.
- Exec:
      OnlyBy: BuildServer
      Path: appveyor
      Argument: [ UpdateBuild, -Version, "$(WHISKEY_SEMVER2)+$(WHISKEY_BUILD_NUMBER)" ]

# Dot-sourcing files is expensive. Move all functions into .psm1 file to improve import speed. Do this before testing
# to ensure the module still works.
- MergeFile:
    OnlyBy: BuildServer
    # Builds run twice on some serves. Only run this step if the module hasn't been merged yet.
    IfExists: Carbon.Cryptography\Functions\*.ps1
    Path:
    - Carbon.Cryptography\Functions\*.ps1
    DestinationPath: Carbon.Cryptography\Carbon.Cryptography.psm1
    DeleteSourceFiles: true
    TextSeparator: "$(NewLine)$(NewLine)"

- PowerShell:
    ExceptDuring: Clean
    Path: init.ps1

- PowerShell:
    OnlyDuring: Clean
    Path: reset.ps1

- Delete:
    OnlyBy: BuildServer
    Path: Carbon.Cryptography\prism.*

- CopyFile:
    Path:
    - CHANGELOG.md
    - README.md
    - LICENSE
    - NOTICE
    DestinationDirectory: Carbon.Cryptography

- Zip:
    ArchivePath: .output\Carbon.Cryptography-$(WHISKEY_SEMVER2).zip
    Path: 
    - Carbon.Cryptography
    Exclude:
    - "*.pdb"
    - "*.orig"
    - "prism.*"

- Exec:
    OnlyBy: BuildServer
    Path: appveyor
    Argument: [ 'PushArtifact', '.output/Carbon.Cryptography-$(WHISKEY_SEMVER2).zip', '-DeploymentName', 'GitHub' ]

- PublishPowerShellModule:
    Path: Carbon.Cryptography

- Exec:
    OnlyBy: BuildServer
    Path: appveyor
    Argument: [
        'PushArtifact',
        '.output/Carbon.Cryptography.$(WHISKEY_SEMVER2_NO_BUILD_METADATA).nupkg',
        '-DeploymentName',
        'PowerShellGallery'
    ]

- Pester:
    Configuration:
        Run:
            Path: Tests\*.Tests.ps1
            ExcludePath:
            - "*\\Carbon.Cryptography.Tests.ps1"
            - "*\\Convert-CSecureStringToString.Tests.ps1"
            - "*\\Find-CTlsCertificate.Tests.ps1"
            - "*\\Get-CCertificate.Tests.ps1"
            - "*\\Import-Carbon.Cryptography.Tests.ps1"
            - "*\\Install-CCertificate.Tests.ps1"
            - "*\\New-CRsaKeyPair.Tests.ps1"
            - "*\\Protect-CString.Tests.ps1"
            - "*\\Uninstall-CCertificate.Tests.ps1"
            - "*\\Unprotect-CString.Tests.ps1"
            Throw: true
        TestResult:
            Enabled: true
            OutputPath: .output\pester5.xml
        Output: Detailed

- Pester:
    # Because the DSC resource in the test is resolved during parsing not execution.
    OnlyOnPlatform: Windows
    Configuration:
        Run:
            Path: Tests\New-CRsaKeyPair.Tests.ps1
            Throw: true
        TestResult:
            Enabled: true
            OutputPath: .output\pester5-new-crsakeypair.xml
        Output: Detailed

- Pester4:
    Script:
    - Tests\Carbon.Cryptography.Tests.ps1
    - Tests\Convert-CSecureStringToString.Tests.ps1
    - Tests\Get-CCertificate.Tests.ps1
    - Tests\Import-Carbon.Cryptography.Tests.ps1
    - Tests\Install-CCertificate.Tests.ps1
    - Tests\Protect-CString.Tests.ps1
    - Tests\Uninstall-CCertificate.Tests.ps1
    - Tests\Unprotect-CString.Tests.ps1
